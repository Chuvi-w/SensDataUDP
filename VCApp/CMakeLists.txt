cmake_minimum_required( VERSION 2.8 )
cmake_policy(SET CMP0048 NEW)
cmake_policy(SET CMP0074 NEW)
project(SensDataReader VERSION 0.0.1.5 DESCRIPTION "Some tools for OLU")
set_property(GLOBAL PROPERTY USE_FOLDERS ON)


if(NOT "${CMAKE_SIZEOF_VOID_P}" STREQUAL "4" AND NOT "${CMAKE_SIZEOF_VOID_P}" STREQUAL "8")
	message(FATAL_ERROR "CMAKE_SIZEOF_VOID_P=${CMAKE_SIZEOF_VOID_P}. Unknown platform")
else()
	if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
		add_compile_definitions(__PLAT_TYPE_32__)
		set(PLATFORM_TYPE 32)
	else()
		add_compile_definitions(__PLAT_TYPE_64__)
		set(PLATFORM_TYPE 64)
	endif()
endif()




if(WIN32)
	if(NOT VSTOOLSET)
		set(VSTOOLSET v141)
	endif()
	set(SFGUI_InstallBase D:/_ExtLibs/SFGUI/Win/${VSTOOLSET}_)
	#set(SFGUI_InstallBase D:/_ExtLibs/SFGUI_Src/Install/SFGUI/v141_)
	if("${PLATFORM_TYPE}" STREQUAL "32")
		set(PLATFOTM_NAME win32)
		set(SFGUI_InstallBase ${SFGUI_InstallBase}win32)
	endif()

	if("${PLATFORM_TYPE}" STREQUAL "64")
		set(PLATFOTM_NAME x64)
		set(SFGUI_InstallBase ${SFGUI_InstallBase}x64)
	endif()
else()
set(PLATFOTM_NAME "")
endif()
#message(TOOLSET=${CMAKE_VS_PLATFORM_TOOLSET})
#message(CMAKE_GENERATOR_TOOLSET=${CMAKE_GENERATOR_TOOLSET})
set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake/Modules/")
set(SFGUI_STATIC_LIBRARIES TRUE)
set(SFML_STATIC_LIBRARIES TRUE)

set(SFML_DIR ${SFGUI_InstallBase}/lib/cmake/SFML)
set(SFGUI_ROOT ${SFGUI_InstallBase}/)

macro(FixStaticLinking)
if(MSVC)
	foreach(flag
			CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
			CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
		if(${flag} MATCHES "/MD")
			string(REGEX REPLACE "/MD" "/MT" ${flag} "${${flag}}")
		endif()
	endforeach()
endif()
endmacro()
macro(PrintDirs var)
	get_property(${var}_LIBRARY_OUTPUT_DIRECTORY TARGET ${var} PROPERTY LIBRARY_OUTPUT_DIRECTORY)
	message(${var}_LIBRARY_OUTPUT_DIRECTORY=${${var}_LIBRARY_OUTPUT_DIRECTORY})
	message(${var}_COMPILE_PDB_OUTPUT_DIRECTORY=${COMPILE_PDB_OUTPUT_DIRECTORY})
endmacro()

macro(FixExePostfix Target)
	#message(Target=${Target})
	set_target_properties(${Target} PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
	set_target_properties(${Target} PROPERTIES RELEASE_POSTFIX ${CMAKE_RELEASE_POSTFIX})
	set_target_properties(${Target} PROPERTIES MINSIZEREL_POSTFIX ${CMAKE_MINSIZEREL_POSTFIX})
	set_target_properties(${Target} PROPERTIES RELWITHDEBINFO_POSTFIX ${CMAKE_RELWITHDEBINFO_POSTFIX})
endmacro()

#set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake/Modules/")

message(BinDir=${CMAKE_BINARY_DIR})

if(CMAKE_CONFIGURATION_TYPES)
	set(CMAKE_DEBUG_POSTFIX "_${PLATFORM_TYPE}_d")
	set(CMAKE_RELEASE_POSTFIX "_${PLATFORM_TYPE}")
	set(CMAKE_MINSIZEREL_POSTFIX "_${PLATFORM_TYPE}_min")
	set(CMAKE_RELWITHDEBINFO_POSTFIX "_${PLATFORM_TYPE}_rd")
	#message(ConfTypes="${CMAKE_CONFIGURATION_TYPES}")
	foreach(cfg ${CMAKE_CONFIGURATION_TYPES})
		string(TOUPPER ${cfg} cfgup)
		#message(Conf=${cfgup})
		
		set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/Lib)
		set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/Lib)
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/Bin)
		
		#set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/${cfg}/Lib)
		#set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/${cfg}/Lib)
		#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/${cfg}/Bin)
		#set(CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/${cfg}/Pdb/Compile)
		
		#set(CMAKE_PDB_OUTPUT_DIRECTORY_${cfgup} ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/${cfg}/Pdb)
		
	endforeach()
else()
		set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/Lib)
		set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/Lib)
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/Bin)
		#set(CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/Pdb/Compile)
		#set(CMAKE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/_Output/${PLATFOTM_NAME}/Pdb)
		
endif()
add_subdirectory(Depends)
add_subdirectory(MathLib3D)
add_subdirectory(BoostQVM)
add_subdirectory(VCApp)